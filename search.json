[
  {
    "objectID": "notebooks/xPSDN-ETH1-staking.html",
    "href": "notebooks/xPSDN-ETH1-staking.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\ncsv_file = \"/Users/nvtrang/code/h2o/protocol-liquidity/data/staking_rewards_balances.csv\"\n\nxPSDN_ETH1_staking_balances = pd.read_csv(csv_file, index_col=0)\nxPSDN_ETH1_staking_balances[[\"balance\"]].apply(pd.to_numeric)\n\nxPSDN_ETH1_staking_balances = xPSDN_ETH1_staking_balances.loc[xPSDN_ETH1_staking_balances[\"balance\"] &gt; 0]\nxPSDN_ETH1_staking_balances.sort_values(by=[\"balance\"], ascending=False).reset_index(drop=True)\n\n\n\n\n\n\n\n\n\nstaker\nbalance\n\n\n\n\n0\n0x6e1ad8e91b9b7b677c2a81fa31b6faaa657424fb\n108.558368\n\n\n1\n0xc647f8f745a59b74a26d76da7dccc8badf649c32\n4.946120\n\n\n2\n0xc148368d792937c649bcfe64ccf101dd6d7d77b4\n3.745663\n\n\n3\n0x519e21a4bf3eb67d811b04b4d8d44deaba5f5e0a\n2.267751\n\n\n4\n0xc766d73be01caa06834032bf5c8f8f0f41a7bf36\n0.674297\n\n\n5\n0xb81a01f609c78c35b95ed5b1c3fd843fc73bdb6f\n0.568656\n\n\n6\n0xd58dcd4594087c2758717a59f44a5ac09db65105\n0.214239\n\n\n7\n0x12cdfa0fc53615e2be8d9b495b065c108bf77907\n0.180200\n\n\n8\n0x62352f1a701cff2aeb6b69d6a8cb196887020f22\n0.141089\n\n\n9\n0x139776871ee95f55d20b10d9ba5a0385451066cd\n0.000492\n\n\n10\n0x5a6eade27773eab2e4038ec7cf388781eca02f63\n0.000128"
  },
  {
    "objectID": "notebooks/psdnOcean.html",
    "href": "notebooks/psdnOcean.html",
    "title": "psdnOcean Dashboard",
    "section": "",
    "text": "Code\nfrom datetime import datetime\nnow = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')\nprint(\"Last run (UTC):\", now)\n\n\nLast run (UTC): 2024-04-04 00:09:29\nCode\n# libs\nimport os\nimport pandas as pd\nimport warnings\nimport plotly.io as pio\nimport plotly.graph_objects as go\nwarnings.filterwarnings(\"ignore\")\nos.chdir('../')\nfrom notebooks.utils.load_data import logs_table_from_etherscan\n\n# contract addresses\npsdn_ocean_contract_address = '0x51Fa2efd62ee56a493f24AE963eAce7D0051929E'.lower()\nocean_reward_lp_staking_contract_address = '0x08D3f2cAe4eaCDCbFb0f7FfaD07a6d00FC36Db6E'.lower() # psdnOcean-ocean lp\nocean_reward_psdn_ocean_staking_contract_address = '0xEb1CEFa6F175B4c889582dfEea4ee155CCD5D2A5'.lower()\nCode\n# log table\npsdn_ocean_logs_table_from_etherscan  = logs_table_from_etherscan(psdn_ocean_contract_address)\npsdn_ocean_logs_table_from_etherscan[['topic0','topic1','topic2']] = psdn_ocean_logs_table_from_etherscan.topics.apply(pd.Series)\n# minting\npsdn_ocean_minting_txns = psdn_ocean_logs_table_from_etherscan.loc[\n    (psdn_ocean_logs_table_from_etherscan['topic0'] == '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef')\n    & (psdn_ocean_logs_table_from_etherscan['topic1'] == '0x0000000000000000000000000000000000000000000000000000000000000000')\n]\n\npsdn_ocean_minting_txns['amount'] = psdn_ocean_minting_txns['data'].apply(lambda x: int(x, 16))/1e18\n\n# lping\npsdn_ocean_lping_txns = psdn_ocean_logs_table_from_etherscan.loc[\n    (psdn_ocean_logs_table_from_etherscan['topic0'] == '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef')\n    & (psdn_ocean_logs_table_from_etherscan['topic2'] == '0x000000000000000000000000ba12222222228d8ba445958a75a0704d566bf2c8') # Balancer vault address\n]\npsdn_ocean_lping_txns['amount'] = psdn_ocean_lping_txns['data'].apply(lambda x: int(x, 16))/1e18\n\n# staking\npsdn_ocean_staking_txns = psdn_ocean_logs_table_from_etherscan.loc[\n    (psdn_ocean_logs_table_from_etherscan['topic0'] == '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef')\n    & (psdn_ocean_logs_table_from_etherscan['topic2'] == f'0x000000000000000000000000{ocean_reward_psdn_ocean_staking_contract_address[2:]}') # psdnOcean staking contract\n]\npsdn_ocean_staking_txns['amount'] = psdn_ocean_staking_txns['data'].apply(lambda x: int(x, 16))/1e18"
  },
  {
    "objectID": "notebooks/psdnOcean.html#psdnocean-minting-and-usages",
    "href": "notebooks/psdnOcean.html#psdnocean-minting-and-usages",
    "title": "psdnOcean Dashboard",
    "section": "1 psdnOCEAN minting and usages",
    "text": "1 psdnOCEAN minting and usages\n\n\nCode\ntotal_psdn_ocean_minted = psdn_ocean_minting_txns['amount'].sum()\nprint(f\"Total psdnOcean minted: {round(total_psdn_ocean_minted)}\")\n\n\nTotal psdnOcean minted: 2458256\n\n\n\n\nCode\nfig = go.Figure()\npio.renderers.default = \"plotly_mimetype+notebook\"\n\ndf = psdn_ocean_minting_txns.groupby(pd.Grouper(key='DateTime', freq='W'))['amount'].sum().reset_index()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['amount'],\n                    mode='lines',\n                    name='psdnOcean minted'))\n\ndf = psdn_ocean_lping_txns.groupby(pd.Grouper(key='DateTime', freq='W'))['amount'].sum().reset_index()#['To'].value_counts()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['amount'],\n                    mode='lines',\n                    name='psdnOcean join LP'))\n\ndf = psdn_ocean_staking_txns.groupby(pd.Grouper(key='DateTime', freq='W'))['amount'].sum().reset_index()#['To'].value_counts()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['amount'],\n                    mode='lines',\n                    name='psdnOcean stake'))\n\n# Edit the layout\nfig.update_layout(title='psdnOcean flow weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#ocean-rewards-to-stakers",
    "href": "notebooks/psdnOcean.html#ocean-rewards-to-stakers",
    "title": "psdnOcean Dashboard",
    "section": "2 Ocean rewards to stakers",
    "text": "2 Ocean rewards to stakers\n\n\nCode\n# LP staking, ocean reward\nocean_reward_lp_staking_logs  = logs_table_from_etherscan(ocean_reward_lp_staking_contract_address)\nocean_reward_lp_staking_logs[['topic0','topic1']] = ocean_reward_lp_staking_logs.topics.apply(pd.Series)\nocean_reward_lp_staking = ocean_reward_lp_staking_logs.loc[\n    # lp_staking['topic0'] == lp_staking['topic0'].unique()[0] # stake\n    # lp_staking['topic0'] == lp_staking['topic0'].unique()[1] # withdraw\n    # lp_staking['topic0'] == lp_staking['topic0'].unique()[2] # earmarkRewards\n    ocean_reward_lp_staking_logs['topic0'] == '0x8e0d3fa908fd7ee819155b3ce71e292b601bbeb0cd00d7758b9d226a523cb827' # RewardPaid\n]\nocean_reward_lp_staking['reward_amount'] = ocean_reward_lp_staking[\"data\"].str.slice(stop=66).apply(int, base=16)/1e18\nocean_reward_lp_staking['reward_token'] = ocean_reward_lp_staking[\"data\"].str.slice(start=67) # should yield ocean contract address only\n\n# psdnOcean staking, ocean reward\nocean_reward_psdn_ocean_staking_logs  = logs_table_from_etherscan(ocean_reward_psdn_ocean_staking_contract_address)\nocean_reward_psdn_ocean_staking_logs[['topic0','topic1']] = ocean_reward_psdn_ocean_staking_logs.topics.apply(pd.Series)\nocean_reward_psdn_ocean_staking = ocean_reward_psdn_ocean_staking_logs.loc[\n    ocean_reward_psdn_ocean_staking_logs['topic0'] == '0x8e0d3fa908fd7ee819155b3ce71e292b601bbeb0cd00d7758b9d226a523cb827' # RewardPaid\n]\nocean_reward_psdn_ocean_staking['reward_amount'] = ocean_reward_psdn_ocean_staking[\"data\"].str.slice(stop=66).apply(int, base=16)/1e18\nocean_reward_psdn_ocean_staking['reward_token'] = ocean_reward_psdn_ocean_staking[\"data\"].str.slice(start=67) # should yield ocean contract address only\n\n\n\n\nCode\ntotal_lp_staking_ocean_rewards = ocean_reward_lp_staking['reward_amount'].sum()\nprint(f\"Total Ocean rewards for lp stakers: {round(total_lp_staking_ocean_rewards)}\")\n\ntotal_psdn_ocean_staking_ocean_rewards = ocean_reward_psdn_ocean_staking['reward_amount'].sum()\nprint(f\"Total Ocean rewards for psdnOcean stakers: {round(total_psdn_ocean_staking_ocean_rewards)}\")\n\n\nTotal Ocean rewards for lp stakers: 321025\nTotal Ocean rewards for psdnOcean stakers: 58961\n\n\n\n\nCode\n# Create traces\nfig = go.Figure()\n\ndf = ocean_reward_lp_staking.groupby(pd.Grouper(key='DateTime', freq='W'))['reward_amount'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['reward_amount'],\n                    mode='lines',\n                    name='To LP stakers'))\n\ndf = ocean_reward_psdn_ocean_staking.groupby(pd.Grouper(key='DateTime', freq='W'))['reward_amount'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['reward_amount'],\n                    mode='lines',\n                    name='To psdnOcean stakers'))\n\n# Edit the layout\nfig.update_layout(title='Ocean rewards to stakers weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#psdn-rewards-to-stakers",
    "href": "notebooks/psdnOcean.html#psdn-rewards-to-stakers",
    "title": "psdnOcean Dashboard",
    "section": "3 Psdn rewards to stakers",
    "text": "3 Psdn rewards to stakers\n\n\nCode\n# LP staking, psdn reward\npsdn_reward_lp_staking_logs  = logs_table_from_etherscan('0x2337e518542Db50da49F686fE3DB883908C3a517')\npsdn_reward_lp_staking_logs[['topic0','topic1']] = psdn_reward_lp_staking_logs.topics.apply(pd.Series)\npsdn_reward_lp_staking = psdn_reward_lp_staking_logs.loc[\n    psdn_reward_lp_staking_logs['topic0'] == '0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486' # RewardPaid\n]\npsdn_reward_lp_staking['reward_amount'] = psdn_reward_lp_staking[\"data\"].apply(int, base=16)/1e18\n\n# psdnOcean staking, psdn reward\npsdn_reward_psdn_ocean_staking_logs  = logs_table_from_etherscan('0x5c87da6a4947b49842c33a82bc30bac3a6811e64')\npsdn_reward_psdn_ocean_staking_logs[['topic0','topic1']] = psdn_reward_psdn_ocean_staking_logs.topics.apply(pd.Series)\npsdn_reward_psdn_ocean_staking = psdn_reward_psdn_ocean_staking_logs.loc[\n    psdn_reward_psdn_ocean_staking_logs['topic0'] == '0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486' # RewardPaid\n]\npsdn_reward_psdn_ocean_staking['reward_amount'] = psdn_reward_psdn_ocean_staking[\"data\"].apply(int, base=16)/1e18\n\n\n\n\nCode\ntotal_lp_staking_psdn_rewards = psdn_reward_lp_staking['reward_amount'].sum()\nprint(f\"Total psdn rewards for lp stakers: {round(total_lp_staking_psdn_rewards)}\")\ntotal_psdn_ocean_staking_psdn_rewards = psdn_reward_psdn_ocean_staking['reward_amount'].sum()\nprint(f\"Total psdn rewards for psdnOcean stakers: {round(total_psdn_ocean_staking_psdn_rewards)}\")\n\n\nTotal psdn rewards for lp stakers: 7039\nTotal psdn rewards for psdnOcean stakers: 5643\n\n\n\n\nCode\nfig = go.Figure()\ndf = psdn_reward_lp_staking.groupby(pd.Grouper(key='DateTime', freq='W'))['reward_amount'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['reward_amount'],\n                    mode='lines',\n                    name='To LP stakers'))\n\ndf = psdn_reward_psdn_ocean_staking.groupby(pd.Grouper(key='DateTime', freq='W'))['reward_amount'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['reward_amount'],\n                    mode='lines',\n                    name='To psdnOcean stakers'))\n\n# Edit the layout\nfig.update_layout(title='PSDN rewards to stakers weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n    )\nfig.show()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#new-wallets-minting-psdnocean",
    "href": "notebooks/psdnOcean.html#new-wallets-minting-psdnocean",
    "title": "psdnOcean Dashboard",
    "section": "4 New wallets minting psdnOcean",
    "text": "4 New wallets minting psdnOcean\n\n\nCode\n# keep only 1st occurence of each address deposit\nnew_address_deposit = psdn_ocean_minting_txns.drop_duplicates(subset='topic2', keep=\"first\")\n\nprint(f\"Total number of unique wallets minting psdnOcean: {new_address_deposit.shape[0]}\")\n\ns = new_address_deposit['DateTime']\ndf = s.groupby(s.dt.floor('d')).size().reset_index(name='count')\n\n# Create figure\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['count'],\n                    mode='markers',\n                    name='To LP stakers'))\n\n# Edit the layout\nfig.update_layout(title='Number of new wallets minting psdnOcean',\n                   xaxis_title='Day',\n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()\n\n\nTotal number of unique wallets minting psdnOcean: 28"
  },
  {
    "objectID": "notebooks/psdnOcean.html#number-of-psdnocean-minting-txns",
    "href": "notebooks/psdnOcean.html#number-of-psdnocean-minting-txns",
    "title": "psdnOcean Dashboard",
    "section": "5 Number of psdnOcean minting txns",
    "text": "5 Number of psdnOcean minting txns\n\n\nCode\n# all minting txns\n# psdn_ocean_deposit = psdn_ocean_transfers.loc[(psdn_ocean_transfers[\"From\"] == \"0x0000000000000000000000000000000000000000\")]\n\n\ns = psdn_ocean_minting_txns['DateTime']\ndf = s.groupby(s.dt.floor('d')).size().reset_index(name='count')\n\n# Create figure\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['count'],\n                    mode='markers',\n                    name='To LP stakers'))\n\n# Edit the layout\nfig.update_layout(title='Number of psdnOcean minting txns',\n                   xaxis_title='Day',\n                #    yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  }
]