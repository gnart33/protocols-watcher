[
  {
    "objectID": "notebooks/xPSDN-ETH1-staking.html",
    "href": "notebooks/xPSDN-ETH1-staking.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\ncsv_file = \"/Users/nvtrang/code/h2o/protocol-liquidity/data/staking_rewards_balances.csv\"\n\nxPSDN_ETH1_staking_balances = pd.read_csv(csv_file, index_col=0)\nxPSDN_ETH1_staking_balances[[\"balance\"]].apply(pd.to_numeric)\n\nxPSDN_ETH1_staking_balances = xPSDN_ETH1_staking_balances.loc[xPSDN_ETH1_staking_balances[\"balance\"] > 0]\nxPSDN_ETH1_staking_balances.sort_values(by=[\"balance\"], ascending=False).reset_index(drop=True)\n\n\n\n\n\n  \n    \n      \n      staker\n      balance\n    \n  \n  \n    \n      0\n      0x6e1ad8e91b9b7b677c2a81fa31b6faaa657424fb\n      108.558368\n    \n    \n      1\n      0xc647f8f745a59b74a26d76da7dccc8badf649c32\n      4.946120\n    \n    \n      2\n      0xc148368d792937c649bcfe64ccf101dd6d7d77b4\n      3.745663\n    \n    \n      3\n      0x519e21a4bf3eb67d811b04b4d8d44deaba5f5e0a\n      2.267751\n    \n    \n      4\n      0xc766d73be01caa06834032bf5c8f8f0f41a7bf36\n      0.674297\n    \n    \n      5\n      0xb81a01f609c78c35b95ed5b1c3fd843fc73bdb6f\n      0.568656\n    \n    \n      6\n      0xd58dcd4594087c2758717a59f44a5ac09db65105\n      0.214239\n    \n    \n      7\n      0x12cdfa0fc53615e2be8d9b495b065c108bf77907\n      0.180200\n    \n    \n      8\n      0x62352f1a701cff2aeb6b69d6a8cb196887020f22\n      0.141089\n    \n    \n      9\n      0x139776871ee95f55d20b10d9ba5a0385451066cd\n      0.000492\n    \n    \n      10\n      0x5a6eade27773eab2e4038ec7cf388781eca02f63\n      0.000128"
  },
  {
    "objectID": "notebooks/psdnOcean.html",
    "href": "notebooks/psdnOcean.html",
    "title": "psdnOcean Dashboard",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport os\npd.options.display.max_colwidth = 100\nos.chdir('../')\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom notebooks.utils.load_data import load_psdn_ocean_transfers, load_lp_staking, load_psdn_ocean_staking, load_psdn_transfers\npsdn_ocean_contract_address = '0x51Fa2efd62ee56a493f24AE963eAce7D0051929E'\nlp_staking_address = '0x08D3f2cAe4eaCDCbFb0f7FfaD07a6d00FC36Db6E' # psdnOcean-ocean lp\npsdn_ocean_staking_contract_address = '0xEb1CEFa6F175B4c889582DFEea4ee155CCD5D2A5'\n\n# load datasets\npsdn_ocean_transfers = load_psdn_ocean_transfers()\npsdn_ocean_staking = load_psdn_ocean_staking()\nlp_staking = load_lp_staking()\npsdn_transfers = load_psdn_transfers()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#psdnocean-minting-and-where-did-they-go",
    "href": "notebooks/psdnOcean.html#psdnocean-minting-and-where-did-they-go",
    "title": "psdnOcean Dashboard",
    "section": "1 psdnOCEAN minting and where did they go?",
    "text": "1 psdnOCEAN minting and where did they go?\n\n\nCode\ntotal_psdn_ocean_minted = psdn_ocean_transfers.loc[(psdn_ocean_transfers[\"From\"] == \"0x0000000000000000000000000000000000000000\")]['Quantity'].sum()\nprint(f\"Total psdnOcean minted: {total_psdn_ocean_minted.round(0)}\")\n\n\nTotal psdnOcean minted: 2057187.0\n\n\n\n\nCode\nimport plotly.io as pio\npio.renderers.default = \"plotly_mimetype+notebook\"\n\ndf = psdn_ocean_transfers.loc[(psdn_ocean_transfers[\"From\"] == \"0x0000000000000000000000000000000000000000\") & (psdn_ocean_transfers[\"Method\"] == \"Deposit\")].groupby(pd.Grouper(key='DateTime', freq='W'))['Quantity'].sum().reset_index()\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['Quantity'],\n                    mode='lines',\n                    name='psdnOcean minted'))\n\ndf = psdn_ocean_transfers.loc[ (psdn_ocean_transfers[\"Method\"] == \"Join Pool\") & (psdn_ocean_transfers['To'] == \"0xba12222222228d8ba445958a75a0704d566bf2c8\")].groupby(pd.Grouper(key='DateTime', freq='W'))['Quantity'].sum().reset_index()#['To'].value_counts()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['Quantity'],\n                    mode='lines',\n                    name='psdnOcean join LP'))\n\ndf = psdn_ocean_transfers.loc[ (psdn_ocean_transfers[\"Method\"] == \"Stake\")].groupby(pd.Grouper(key='DateTime', freq='W'))['Quantity'].sum().reset_index()\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['Quantity'],\n                    mode='lines',\n                    name='psdnOcean single stake'))\n\n# Edit the layout\nfig.update_layout(title='psdnOcean flow weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#ocean-rewards-to-stakers",
    "href": "notebooks/psdnOcean.html#ocean-rewards-to-stakers",
    "title": "psdnOcean Dashboard",
    "section": "2 Ocean rewards to stakers",
    "text": "2 Ocean rewards to stakers\n\n\nCode\ntotal_lp_staking_ocean_rewards = lp_staking.loc[(lp_staking['TokenSymbol'] == 'OCEAN') & (lp_staking['From'] == lp_staking_address.lower())]['TokenValue'].sum()\ntotal_psdn_ocean_staking_ocean_rewards = psdn_ocean_staking.loc[(psdn_ocean_staking['TokenSymbol'] == 'OCEAN') & (psdn_ocean_staking['From'] ==psdn_ocean_staking_contract_address.lower())].sum()['TokenValue']\n\nprint(f\"Total Ocean rewards for lp stakers: {total_lp_staking_ocean_rewards.round(0)}\")\nprint(f\"Total Ocean rewards for psdnOcean stakers: {total_psdn_ocean_staking_ocean_rewards.round(0)}\")\n\n\nTotal Ocean rewards for lp stakers: 65753.0\nTotal Ocean rewards for psdnOcean stakers: 19630.0\n\n\n\n\nCode\n# Create traces\nfig = go.Figure()\n\ndf = lp_staking.loc[(lp_staking['TokenSymbol'] == 'OCEAN') & (lp_staking['From'] ==lp_staking_address.lower())].groupby(pd.Grouper(key='DateTime', freq='W'))['TokenValue'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['TokenValue'],\n                    mode='lines',\n                    name='To LP stakers'))\n\ndf = psdn_ocean_staking.loc[(psdn_ocean_staking['TokenSymbol'] == 'OCEAN') & (psdn_ocean_staking['From'] ==psdn_ocean_staking_contract_address.lower())].groupby(pd.Grouper(key='DateTime', freq='W'))['TokenValue'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['TokenValue'],\n                    mode='lines',\n                    name='To psdnOcean stakers'))\n\n# Edit the layout\nfig.update_layout(title='Ocean rewards to stakers weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  },
  {
    "objectID": "notebooks/psdnOcean.html#psdn-rewards-to-stakers",
    "href": "notebooks/psdnOcean.html#psdn-rewards-to-stakers",
    "title": "psdnOcean Dashboard",
    "section": "3 Psdn rewards to stakers",
    "text": "3 Psdn rewards to stakers\n\n\nCode\ntotal_lp_staking_psdn_rewards = psdn_transfers.loc[psdn_transfers['From'] == '0x2337e518542db50da49f686fe3db883908c3a517']['Quantity'].sum()\ntotal_psdn_ocean_staking_psdn_rewards = psdn_transfers.loc[psdn_transfers['From'] == '0x5c87da6a4947b49842c33a82bc30bac3a6811e64']['Quantity'].sum()\n\nprint(f\"Total Psdn rewards for lp stakers: {total_lp_staking_psdn_rewards.round(0)}\")\nprint(f\"Total Psdn rewards for psdnOcean stakers: {total_psdn_ocean_staking_psdn_rewards.round(0)}\")\n\n\nTotal Psdn rewards for lp stakers: 3470.0\nTotal Psdn rewards for psdnOcean stakers: 5243.0\n\n\n\n\nCode\nfig = go.Figure()\ndf = psdn_transfers.loc[psdn_transfers['From'] == '0x2337e518542db50da49f686fe3db883908c3a517'].groupby(pd.Grouper(key='DateTime', freq='W'))['Quantity'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['Quantity'],\n                    mode='lines',\n                    name='To LP stakers'))\n\ndf = psdn_transfers.loc[psdn_transfers['From'] == '0x5c87da6a4947b49842c33a82bc30bac3a6811e64'].groupby(pd.Grouper(key='DateTime', freq='W'))['Quantity'].sum().reset_index()\n\nfig.add_trace(go.Scatter(x=df['DateTime'], y=df['Quantity'],\n                    mode='lines',\n                    name='To psdnOcean stakers'))\n\n# Edit the layout\nfig.update_layout(title='PSDN rewards to stakers weekly',\n                   xaxis_title='Day',\n                   yaxis_title='Amount', \n                   autosize=True,\n                    # width=1000,\n                    # height=600,\n    )\nfig.show()"
  }
]